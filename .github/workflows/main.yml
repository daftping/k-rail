name: CI

on: [pull_request]

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.13.x]
    runs-on: ubuntu-latest

    steps:

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Test
      run: make test

  benchmark:
    strategy:
      matrix:
        go-version: [1.13.x]
    runs-on: ubuntu-latest

    steps:

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Benchmark
      run: GO111MODULE=on CGO_ENABLED=0 go test -benchmem -run=^$ github.com/daftping/k-rail/server -bench .

  # lint:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       go-version: [1.13.x]

  #   steps:

  #   - name: Set up Go ${{ matrix.go-version }}
  #     uses: actions/setup-go@v1
  #     with:
  #       go-version: ${{ matrix.go-version }}

  #   - name: Check out code into the Go module directory
  #     uses: actions/checkout@v1

  #   - name: Lint
  #     uses: matoous/golangci-lint-action@v1.1.0
  #     # with:
  #     #   config: .golangci.yml

  build:
    strategy:
      matrix:
        go-version: [1.13.x]
    runs-on: ubuntu-latest

    steps:

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Build
      run: make build